import{_ as s,c as n,o as a,e as l}from"./app.a2c63123.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"锁升级过程","slug":"锁升级过程","link":"#锁升级过程","children":[]},{"level":2,"title":"Monitor与java对象是如何关联的？","slug":"monitor与java对象是如何关联的","link":"#monitor与java对象是如何关联的","children":[]},{"level":2,"title":"反编译查看monitor","slug":"反编译查看monitor","link":"#反编译查看monitor","children":[{"level":3,"title":"反编译synchronized普通同步方法","slug":"反编译synchronized普通同步方法","link":"#反编译synchronized普通同步方法","children":[]},{"level":3,"title":"反编译synchronized静态普通同步方法","slug":"反编译synchronized静态普通同步方法","link":"#反编译synchronized静态普通同步方法","children":[]}]},{"level":2,"title":"偏向锁","slug":"偏向锁","link":"#偏向锁","children":[]},{"level":2,"title":"轻量级锁","slug":"轻量级锁","link":"#轻量级锁","children":[{"level":3,"title":"轻量级锁加锁","slug":"轻量级锁加锁","link":"#轻量级锁加锁","children":[]},{"level":3,"title":"轻量级锁释放","slug":"轻量级锁释放","link":"#轻量级锁释放","children":[]}]},{"level":2,"title":"锁与hashCode","slug":"锁与hashcode","link":"#锁与hashcode","children":[]},{"level":2,"title":"锁消除","slug":"锁消除","link":"#锁消除","children":[]},{"level":2,"title":"锁粗化","slug":"锁粗化","link":"#锁粗化","children":[]}],"relativePath":"serverSide/synchronized锁升级.md"}'),o={name:"serverSide/synchronized锁升级.md"},p=l(`<h2 id="锁升级过程" tabindex="-1">锁升级过程 <a class="header-anchor" href="#锁升级过程" aria-hidden="true">#</a></h2><p>无锁 -&gt; 偏向锁 -&gt; 轻量级锁 -&gt; 重量级锁 偏向锁: MarkWord存储的是偏向的线程ID; 轻量锁: MarkWord存储的是指向线程栈中Lock Record的指针; 重量锁:MarkWord存储的是指向堆中的monitor对象的指针;</p><h2 id="monitor与java对象是如何关联的" tabindex="-1">Monitor与java对象是如何关联的？ <a class="header-anchor" href="#monitor与java对象是如何关联的" aria-hidden="true">#</a></h2><p>每一个实例对象都有一个Monitor,可以和对象一起创建和销毁。Monitor由ObjectMonitor实现（ObjectMonitor.cpp文件实现） 1.若一个java对象被某个线程锁住，则该java对象的Mark Word字段中LockWord指向monitor的起始地址 2.Monitor的Owner（ObjectMonitor.cpp中定义字段之一）字段会存放拥有相关联对象锁的线程id</p><h2 id="反编译查看monitor" tabindex="-1">反编译查看monitor <a class="header-anchor" href="#反编译查看monitor" aria-hidden="true">#</a></h2><p>从反编译可以看出monitorenter与monitorexit是一对二的关系，后面的monitorexit是防止代码块中出现异常导致锁无法释放的处理。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SynTest01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Object</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fun1</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">synchronized</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">Compiled</span><span style="color:#A6ACCD;"> from </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SynTest01.java</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SynTest01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fun1</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    Code</span><span style="color:#89DDFF;font-style:italic;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> aload_0</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> getfield      #</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">                  </span><span style="color:#676E95;font-style:italic;">// Field obj:Ljava/lang/Object;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> dup</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> astore_1</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> monitorenter	</span><span style="color:#676E95;font-style:italic;">//锁</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> get</span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;">     #</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">                  </span><span style="color:#676E95;font-style:italic;">// Field java/lang/System.out:Ljava/io/PrintStream;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> ldc           #</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">                  </span><span style="color:#676E95;font-style:italic;">// String hello	输出语句</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> invokevirtual #</span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">                  </span><span style="color:#676E95;font-style:italic;">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> aload_1</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> monitorexit	</span><span style="color:#676E95;font-style:italic;">//释放锁</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">17</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">goto</span><span style="color:#A6ACCD;">          </span><span style="color:#F78C6C;">25</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> astore_2</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">21</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> aload_1</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">22</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> monitorexit	</span><span style="color:#676E95;font-style:italic;">//释放锁 对异常的处理防止锁无法释放</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">23</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> aload_2</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">24</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> athrow	</span><span style="color:#676E95;font-style:italic;">//抛出异常</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">25</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> table</span><span style="color:#89DDFF;font-style:italic;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">       from    to  target type</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;">   any</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;">   any</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]);</span></span>
<span class="line"><span style="color:#A6ACCD;">    Code</span><span style="color:#89DDFF;font-style:italic;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="反编译synchronized普通同步方法" tabindex="-1">反编译synchronized普通同步方法 <a class="header-anchor" href="#反编译synchronized普通同步方法" aria-hidden="true">#</a></h3><p>调用指令将会检查方法的ACC_SYNCHRONIZED访问标志是否被设置如果设置了，执行线程会将先持有monitor锁，然后再执行方法，最后在方法完成(无论是正常完成还是非正常完成)时释放 monitor</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SynTest01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">synchronized</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">fun1</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">synchronized</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fun1</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    descriptor</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">V</span></span>
<span class="line"><span style="color:#A6ACCD;">    flags</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0x0021</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> ACC_PUBLIC</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ACC_SYNCHRONIZED	</span><span style="color:#676E95;font-style:italic;">//ACC_S...标志</span></span>
<span class="line"><span style="color:#A6ACCD;">    Code</span><span style="color:#89DDFF;font-style:italic;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      stack</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> locals</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> args_size</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> getstatic     #</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">                  </span><span style="color:#676E95;font-style:italic;">// Field java/lang/System.out:Ljava/io/PrintStream;</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> ldc           #</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">                  </span><span style="color:#676E95;font-style:italic;">// String hello</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> invokevirtual #</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">                  </span><span style="color:#676E95;font-style:italic;">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#A6ACCD;">      LineNumberTable</span><span style="color:#89DDFF;font-style:italic;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        line </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">        line </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span></span>
<span class="line"><span style="color:#A6ACCD;">      LocalVariableTable</span><span style="color:#89DDFF;font-style:italic;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Start</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">Length</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">Slot</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">Name</span><span style="color:#A6ACCD;">   </span><span style="color:#C792EA;">Signature</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;">     </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">this</span><span style="color:#A6ACCD;">   LSynTest01</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="反编译synchronized静态普通同步方法" tabindex="-1">反编译synchronized静态普通同步方法 <a class="header-anchor" href="#反编译synchronized静态普通同步方法" aria-hidden="true">#</a></h3><p>比普通方法多了一个ACC_STATIC标志，从对象锁变为类锁。</p><h2 id="偏向锁" tabindex="-1">偏向锁 <a class="header-anchor" href="#偏向锁" aria-hidden="true">#</a></h2><p>在实际应用运行过程中发现，“锁总是同一个线程持有，很少发生竞争”，也就是说锁总是被第一个占用他的线程拥有，这个线程就是锁的偏向线程。 那么只需要在锁第一次被拥有的时候，记录下偏向线程ID。这样偏向线程就一直持有着锁(后续这个线程进入和退出这段加了同步锁的代码块时，不需要再次加锁和释放锁。而是直接会去检查锁的MarkWord里面是不是放的自己的线程ID)。如果相等，表示偏向锁是偏向于当前线程的，就不需要再尝试获得锁了，直到竞争发生才释放锁。以后每次同步，检查锁的偏向线程ID与当前线程ID是否一致，如果一致直接进入同步。无需每次加锁解锁都去CAS更新对象头。如果自始至终使用锁的线程只有一个，很明显偏向锁几乎没有额外开销，性能极高。 如果不等，表示发生了竞争，锁已经不是总是偏向于同一个线程了，这个时候会尝试使用CAS来替换MarkWord里面的线程ID为新线程的ID， 竞争成功，表示之前的线程不存在了， MarkWord里面的线程ID为新线程的ID，锁不会升级，仍然为偏向锁:竞争失败，这时候可能需要升级变为轻量级锁，才能保证线程间公平竞争锁。注意，偏向锁只有遇到其他线程尝试竞争偏向锁时，持有偏向锁的线程才会释放锁，线程是不会主动释放偏向锁的。</p><h6 id="偏向锁的撤销" tabindex="-1">偏向锁的撤销 <a class="header-anchor" href="#偏向锁的撤销" aria-hidden="true">#</a></h6><p>偏向锁使用一种等到竞争出现才释放锁的机制，只有当其他线程竞争锁时，持有偏向锁的原来线程才会被撤销.撤销需要等待全局安全点(该时间点上没有字节码正在执行)，同时检查持有偏向锁的线程是否还在执行: 1.第一个线程正在执行synchronized方法(处于同步块)，它还没有执行完，其它线程来抢夺，该偏向锁会被取消掉并出现锁升级。 此时轻量级锁由原持有偏向锁的线程持有，继续执行其同步代码，而正在竞争的线程会进入自旋等待获得该轻量级锁。 2.第一个线程执行完成synchronized方法(退出同步块)，则将对象头设置成无锁状态并撤销偏向锁，重新偏向。</p><h2 id="轻量级锁" tabindex="-1">轻量级锁 <a class="header-anchor" href="#轻量级锁" aria-hidden="true">#</a></h2><h3 id="轻量级锁加锁" tabindex="-1">轻量级锁加锁 <a class="header-anchor" href="#轻量级锁加锁" aria-hidden="true">#</a></h3><p>加锁对应的字节码是 monitorenter 指令，JVM 执行这个指令时，首先会向当前线程栈内插入一条锁记录，锁记录内的锁引用字段保存锁对象的地址，然后将对象头中的 ，mark word 复制到锁记录的 displaced 字段中，官方称 Displaced Mark Word。然后线程尝试使用 CAS 将对象头中的 mark word 替换位指向锁记录的指针，并将其修改为当前线程持有轻量级锁的状态。如果成功，当前线程获得锁，如果失败，表示其他线程竞争锁，当前线程便尝试自旋获得锁</p><h3 id="轻量级锁释放" tabindex="-1">轻量级锁释放 <a class="header-anchor" href="#轻量级锁释放" aria-hidden="true">#</a></h3><p>释放锁的字节码是 moniterexit ，JVM处理这条指令时，首先从当前从当前线程栈内找到 &quot;最后一条&quot;锁引用字段指向当前锁对象的锁记录，将这条锁记录的锁字段设置为 null，（这一个操作不需要 CAS ，因为线程栈的数据不存在多线程访问的场景），这一步结束后，再检查这条锁记录的 displaced 字段是否有值，如果无值，说明这条锁记录是锁重入时存放的，此时只需将这条锁记录释放，即将锁记录中的锁引用字段设置为 null，这样就完成了一次锁的退出</p><p>如果不为空，说明这一次是最后一次释放该锁，displaced中存放的是 displacedMarkWord，该值对应的是无锁状态，当前线程需要把锁记录内的displaced的值 通过 CAS 的方式，设置到当前锁对象的 markword 中，这一步设置成功之后就相当于完全释放锁了，如果失败，当前锁可能已被升级为重量级锁，或者 现在已经处于膨胀状态中，需要走重量级锁的退出逻辑</p><h2 id="锁与hashcode" tabindex="-1">锁与hashCode <a class="header-anchor" href="#锁与hashcode" aria-hidden="true">#</a></h2><p>在无锁状态下，Mark Word中可以存储对象的identity hash code值。当对象的hashCode0方法第一次被调用时，JVM会生成对应的identity hash code值并将该值存储到Mark Word中。 对于偏向锁，在线程获取偏向锁时，会用Thread D和epoch值覆盖identity hash code所在的位置。如果一个对象的hashCode0方法已经被调用过一次之后，这个对象不能被设置偏向锁。因为如果可以的化，那Mark Word中的identity hash code必然会被偏向线程ld给覆盖，这就会造成同一个对象前后两次调用hashCode()方法得到的结果不一致。偏向锁对象调用hashCode是会膨胀为重量锁，若先计算过hashCode再加锁则直接变为轻量级锁。 升级为轻量级锁时，JVM会在当前线程的栈帧中创建一个锁记录(Lock Record)空间，用于存储锁对象的Mak Word拷贝，该拷贝中可以包含identity hash code，所以轻量级锁可以和identity hash code共存，哈希码和GC年龄自然保存在此，释放锁后会将这些信息写回到对象头。 升级为重量级锁后，Mark Word保存的重量级锁指针，代表重量级锁的ObjectMonitor类里有字段记录非加锁状态下的Mark Word，锁释放后也会将信息写回到对象头。</p><h2 id="锁消除" tabindex="-1">锁消除 <a class="header-anchor" href="#锁消除" aria-hidden="true">#</a></h2><p>这样写 会造成锁失效 称作锁消除</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">test01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//锁消除</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        test01 test01 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test01</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Thread</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">test01</span><span style="color:#89DDFF;font-style:italic;">::</span><span style="color:#A6ACCD;">testFun</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testFun</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Object</span><span style="color:#89DDFF;">();</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//每次拿到的锁都是新的</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">synchronized</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hashCode</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="锁粗化" tabindex="-1">锁粗化 <a class="header-anchor" href="#锁粗化" aria-hidden="true">#</a></h2><p>JIT编译时会自动优化成一个 称作 锁粗化</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">test01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//锁粗化</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Object</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Thread</span><span style="color:#89DDFF;">(()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">synchronized</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">synchronized</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">synchronized</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}).</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">test01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//锁粗化</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Object</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Thread</span><span style="color:#89DDFF;">(()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">synchronized</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}).</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,33),e=[p];function t(c,r,y,C,D,A){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{F as __pageData,d as default};
